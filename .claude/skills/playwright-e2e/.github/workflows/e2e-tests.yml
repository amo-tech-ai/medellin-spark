name: E2E Tests (Playwright MCP)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run smoke tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      test-suite:
        description: 'Test suite to run'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - auth
          - pitch-deck
          - all

jobs:
  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.test-suite == 'smoke' || github.event.inputs.test-suite == 'all'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Install Playwright MCP
        run: npm install -g @playwright/mcp@latest

      - name: Start dev server
        run: |
          npm run dev &
          npx wait-on http://localhost:8080 -t 60000

      - name: Run smoke tests
        run: npm run test:smoke

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: test-results/

  auth-test:
    name: Authentication Test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.test-suite == 'auth' || github.event.inputs.test-suite == 'all'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Install Playwright MCP
        run: npm install -g @playwright/mcp@latest

      - name: Start dev server
        run: |
          npm run dev &
          npx wait-on http://localhost:8080 -t 60000

      - name: Run auth tests
        run: npm run test:auth

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: auth-test-results
          path: test-results/

  full-journey-test:
    name: Full Journey Test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' &&
      (github.event.inputs.test-suite == 'pitch-deck' || github.event.inputs.test-suite == 'all')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Install Playwright MCP
        run: npm install -g @playwright/mcp@latest

      - name: Setup Supabase (if needed)
        run: |
          # Add Supabase setup steps if required
          echo "Supabase setup would go here"

      - name: Start dev server
        run: |
          npm run dev &
          npx wait-on http://localhost:8080 -t 60000

      - name: Run full journey tests
        run: npm run test:pitch-deck
        timeout-minutes: 20

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-journey-results
          path: test-results/

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: journey-screenshots
          path: screenshots/

      - name: Upload video traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: journey-traces
          path: test-results/*.webm

  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [smoke-test, auth-test, full-journey-test]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate summary report
        run: |
          echo "# E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Suites" >> $GITHUB_STEP_SUMMARY
          echo "- Smoke Test: ${{ needs.smoke-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Auth Test: ${{ needs.auth-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Full Journey: ${{ needs.full-journey-test.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const smokeResult = '${{ needs.smoke-test.result }}';
            const authResult = '${{ needs.auth-test.result }}';
            const journeyResult = '${{ needs.full-journey-test.result }}';

            const body = `## 🎭 E2E Test Results

            | Test Suite | Result |
            |------------|--------|
            | Smoke Test | ${smokeResult === 'success' ? '✅' : '❌'} ${smokeResult} |
            | Auth Test | ${authResult === 'success' ? '✅' : '❌'} ${authResult} |
            | Full Journey | ${journeyResult === 'success' ? '✅' : '❌'} ${journeyResult} |

            [View detailed results in artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
